// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  // id         Int     @id @default(autoincrement())
  id            String @id @default(uuid())
  age           Int
  name          String
  email         String @unique
  // isAdmin        Boolean
  role          Role   @default(BASIC)
  // largeNumber BigInt
  // prefernces     Json
  // blob Bytes
  // rating Decimal
  writtenPosts  Post[] @relation("WrittenPosts")
  favoritePosts Post[] @relation("FavoritePosts")

  userPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id])
  userPreferenceId String?         @unique

  @@unique([age, name]) // no habran usuarios iguales
  @@index([email]) // mejora el preformance al buscar por email
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User?
}

model Post {
  id            String     @id @default(uuid())
  title         String
  averageRating Float
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      String
  favoriteBy    User?      @relation("FavoritePosts", fields: [favoriteById], references: [id])
  favoriteById  String
  categories    Category[]
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}

enum Role {
  ADMIN
  BASIC
  EDITOR
}
